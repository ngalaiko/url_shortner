// Code generated by generate_schema_tables.go DO NOT EDIT.

package tables

import (
	"bytes"
	"fmt"

	"github.com/ngalayko/url_shortner/server/dao"
	"github.com/ngalayko/url_shortner/server/logger"
	"github.com/ngalayko/url_shortner/server/schema"
)

type UserTable struct {
	db     *dao.Db
	logger *logger.Logger
}

func (ut *UserTable) InsertUser(u *schema.User) error {
	return u.db.Mutate(func(tx *dao.Tx) error {

		insertSQL := "INSERT INTO users" +
			"(first_name, last_name, created_at, deleted_at)" +
			"VALUES" +
			fmt.Sprintf("(%v, %v, %v, %v)",
				u.FirstName,
				u.LastName,
				u.CreatedAt,
				u.DeletedAt)

		_, err := tx.Exec(insertSQL)
		if err != nil {
			return err
		}

		ut.logger.Info("User created",
			zap.Reflect("$.Name", u),
		)
		return nil
	})
}

func (ut *UserTable) UpdateUser(u *schema.User) error {
	return u.db.Mutate(func(tx *dao.Tx) error {

		updateSQL := "UPDATE users" +
			"SET" +
			fmt.Sprintf("first_name = %v,", u.LastName) +
			fmt.Sprintf("last_name = %v,", u.CreatedAt) +
			fmt.Sprintf("created_at = %v,", u.DeletedAt) +
			fmt.Sprintf("deleted_at = %v", u.DeletedAt)

		_, err := tx.Exec(updateSQL)
		if err != nil {
			return err
		}

		ut.logger.Info("User updated",
			zap.Reflect("$.Name", u),
		)
		return nil
	})
}
